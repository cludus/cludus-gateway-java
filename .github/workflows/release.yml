# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Release New Version

on:
  workflow_dispatch:

permissions:
  deployments: write
  contents: write
  statuses: write
  actions: write
  checks: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
    - name: Git Config
      run: |
        git config --global user.email "admin@cludus.xyz"
        git config --global user.name "cludusadmin"
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract Release Version
      id: version
      run: |
        RELEASE_VERSION=$(gradle properties -q | awk '/^version:/ {print $2}' | awk -F"-" '{print $1}')
        echo "release_tag=$RELEASE_VERSION" >> $GITHUB_OUTPUT
    - name: Verify release tag
      run: |
        echo ${{ steps.version.outputs.release_tag }}
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.8.1
      with:
        arguments: release -Prelease.useAutomaticVersion=true
      env:
        GITHUB_ACTOR: ${{ secrets.PACKAGES_ACTOR }}
        GITHUB_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.release_tag }}
        release_name: Release ${{ steps.version.outputs.release_tag }}
        body: |
          Version ${{ steps.version.outputs.release_tag }}
        draft: false
        prerelease: false